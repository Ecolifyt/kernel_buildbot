name: Build RisignOSS

permissions:
  actions: write
  contents: write
  statuses: write

on:
  workflow_dispatch:

jobs:
  Build-rom:
    name: "🐎 Build Rom"
    runs-on: Fast

    outputs:
      build_date: ${{ steps.generate-builddate.outputs.build_date }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}
        # Aplica `set -ex` globalmente a todos los comandos shell
        run: |
          set -ex

    steps:
      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: latest

      - run: curl -vvv https://ifconfig.me

      - name: ⏰ Set builddate
        id: generate-builddate
        run: |
          BUILD_DATE=$(date +'%Y%m%d_%H%M%S')
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          echo "build_date=$BUILD_DATE" >> $GITHUB_OUTPUT

      - name: 😄 Checkout
        uses: actions/checkout@v4

      - name: ⭐ Install prerequisites
        run: |
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y \
          bc bison lib32ncurses5-dev libncurses5 libncurses5-dev build-essential \
          openvpn openvpn-systemd-resolved ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf \
          imagemagick protobuf-compiler python3-protobuf lib32readline-dev lib32z1-dev libdw-dev libelf-dev lz4 \
          libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc \
          zip zlib1g-dev wireguard-tools

      - name: Set Variables
        run: echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Install Git-Repo
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          sudo ln -sf ~/bin/repo /usr/bin/repo

      - run: mkdir -p rom && cd rom

      - run: repo init -u https://github.com/RisingOS-Revived/android -b qpr2 --git-lfs --depth=1

      - run: git clone https://github.com/Ecolifyt/local_manifests rom/.repo/local_manifests

      - run: |
          if [ -d "rom/.repo" ]; then
            find rom/.repo -name '*.lock' -delete
          fi

      - run: cd rom && repo sync -j$(nproc --all) --force-sync -c --no-tags

      - run: cd rom && source build/envsetup.sh

      - run: cd rom && riseup cheetah user

      - run: cd rom && rise b

      - run: ls -R rom/out/

      - name: "💾 Upload RisignOSS build files => (${{ env.BUILD_DATE }})"
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          path: |
            rom/out/target/product/cheetah/*.zip
            rom/out/target/product/cheetah/*.img

      - name: 🧧 Create GitHub Release => (${{ env.BUILD_DATE }})
        continue-on-error: true
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.BUILD_DATE }}.${{ github.run_number }}
          name: "RisignOSS"
          body: |
            ## Release Notes for v${{ env.BUILD_DATE }}.${{ github.run_number }}
            ### Features:
            - [+] First build
          files: |
            rom/out/target/product/cheetah/*.zip
            rom/out/target/product/cheetah/*.img
