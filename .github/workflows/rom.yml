name: Build RisignOSS
permissions:
  actions: write
  contents: write
  statuses: write
  
on:
  workflow_dispatch:
  
jobs:
  Build-rom:
    name: "🐎 Build Rom"
    runs-on: Ubuntu
      
    steps:
      - name: ⏰ Set builddate
        id: generate-builddate
        run: echo "BUILDDATE=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT
        
      # This action checks-out your CONFIGSitory under $GITHUB_WORKSPACE, so your workflow can access it.
      - name: 😄 Checkout
        uses: actions/checkout@v4
          
      # Install prerequisites for Ubuntu
      - name: ⭐ Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          bc bison lib32ncurses5-dev libncurses5 libncurses5-dev build-essential \
          openvpn openvpn-systemd-resolved ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf \
          imagemagick protobuf-compiler python3-protobuf lib32readline-dev lib32z1-dev libdw-dev libelf-dev lz4 \
          libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc \
          zip zlib1g-dev wireguard

      - name: Set up WireGuard
        uses: egor-tensin/setup-wireguard@v1
        with:
         endpoint: '${{ secrets.ENDPOINT }}'
         endpoint_public_key: '${{ secrets.ENDPOINT_PUBLIC }}'
         ips: '${{ secrets.IPS }}'
         allowed_ips: '${{ secrets.ALLOWED_IPS }}'
         private_key: '${{ secrets.PRIVATE }}'
         preshared_key: '${{ secrets.PRESHARED }}'
    
      - name: Set Variables
        shell: bash
        run: |
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Install Git-Repo
        run: |
          mkdir ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          sudo ln -sf ~/bin/repo /usr/bin/repo
          
      - name: 🌟 checkout aosp build system
        run: |
          chmod +x repo.sh
          bash repo.sh
          
      - name: 💫 Build Rom
        run: |
          chmod +x build.sh
          bash build.sh
      
      - name: "💾 Upload RisignOSS build files => (${{ env.BUILD_DATE }})"
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          path: |
            /home/runner/work/kernel_buildbot/rom/out/target/product/cheetah/*.zip
            /home/runner/work/kernel_buildbot/rom/out/target/product/cheetah/*.img

      - name: 🧧 Create GitHub Release => (${{ env.BUILD_DATE }})
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: Ecolifyt
          REPO_NAME: kernel_buildbot
          RELEASE_NAME: "RisignOSS"
          RELEASE_NOTES: |
            ## Release Notes for v${{ env.BUILD_DATE }}.${{ github.run_number }}
            ### Features:
            - [+] First build
        continue-on-error: true
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.BUILD_DATE }}.${{ github.run_number }}
          files: |
             /home/runner/work/kernel_buildbot/rom/out/target/product/cheetah/*.zip
             /home/runner/work/kernel_buildbot/rom/out/target/product/cheetah/*.img
          generate_release_notes: true
