name: Build RisignOSS

concurrency:
  group: risignoss-${{ github.run_id }}
  cancel-in-progress: false

permissions:
  actions: write
  contents: write
  statuses: write

on:
  workflow_dispatch:

jobs:
  Build-rom:
    strategy:
      max-parallel: 1000
      matrix:
        device: [cheetah]  # Puedes agregar más dispositivos aquí

    name: "🐎 Build Rom - ${{ matrix.device }}"
    runs-on: [builde]

    outputs:
      build_date: ${{ steps.generate-builddate.outputs.build_date }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    steps:
      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: latest

      - name: Check IP
        run: curl -vvv https://ifconfig.me

      - name: ⏰ Set builddate
        id: generate-builddate
        run: |
          BUILD_DATE=$(date +'%Y%m%d_%H%M%S')
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          echo "build_date=$BUILD_DATE" >> $GITHUB_OUTPUT

      - name: ⭐ Install prerequisites
        run: |
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y \
            bc bison lib32ncurses5-dev libncurses5 libncurses5-dev build-essential \
            openvpn openvpn-systemd-resolved ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf \
            imagemagick protobuf-compiler python3-protobuf lib32readline-dev lib32z1-dev libdw-dev libelf-dev lz4 \
            libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc \
            zip zlib1g-dev wireguard-tools haveged openssl

      - name: Install Git-Repo
        run: |
          sudo curl --create-dirs -L -o /usr/local/bin/repo https://storage.googleapis.com/git-repo-downloads/repo
          sudo chmod a+rx /usr/local/bin/repo

      - name: Setup ROM Directory
        run: mkdir -p rom

      - name: Calculate CPU Parallel Jobs (75%)
        run: |
          total=$(nproc --all)
          jobs=$((total * 75 / 100))
          echo "REPO_JOBS=$jobs" >> $GITHUB_ENV

      - name: Repo Init
        run: |
          cd rom
          git config --global user.name "EduardoB3677"
          git config --global user.email "ealvarado2677@gmail.com"
          repo init -u https://github.com/RisingOS-Revived/android -b qpr2 --git-lfs

      - name: Clone Local Manifests
        run: |
          git clone https://github.com/Ecolifyt/local_manifests rom/.repo/local_manifests

      - name: Clean Locks
        run: |
          if [ -d "rom/.repo" ]; then
            find rom/.repo -name '*.lock' -delete
          fi

      - name: Repo Sync with moderate concurrency and retries
        run: |
          set -ex
          cd rom
          retries=5
          job_concurrency=8 # Ajusta este valor según tus necesidades
          success=0
          while [ $retries -gt 0 ]; do
            echo "Intento de repo sync con -j${job_concurrency}, intentos restantes: ${retries}"
            if repo sync -c --no-clone-bundle --optimized-fetch --prune --force-sync -j${job_concurrency} --fail-fast 2>&1 | tee sync.log; then
               success=1
               break
            else
               echo "Repo sync falló con -j${job_concurrency}, reintentando en 10 segundos..."
               sleep 30
            fi
            retries=$((retries-1))
          done
          if [ $success -ne 1 ]; then
            echo "Repo sync falló tras varios intentos."
            exit 1
          fi
    
      # Aquí aplicamos un parche al envsetup para que no se quede atascado en la lectura infinita.
      - name: Patch envsetup for CI (fix /dev/urandom hang)
        run: |
          echo "Aplicando parche a envsetup.sh..."
          cd rom/vendor/lineage/build
          # Reemplaza "cat /dev/urandom" por "head -c 100 /dev/urandom" para limitar la cantidad de datos
          sed -i 's|cat /dev/urandom|head -c 100 /dev/urandom|g' envsetup.sh
          grep -R "head -c 100 /dev/urandom" envsetup.sh

      - name: Build RisingOSS
        run: |
          set -e
          cd rom
          source build/envsetup.sh || true
          riseup ${{ matrix.device }} user -j${REPO_JOBS}
          rise b

      - name: List Output
        run: ls -R rom/out/

      - name: "💾 Upload RisignOSS build files => (${{ env.BUILD_DATE }})"
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          path: |
            rom/out/target/product/${{ matrix.device }}/*.zip
            rom/out/target/product/${{ matrix.device }}/*.img
            rom/*.log

      - name: 🧧 Create GitHub Release => (${{ env.BUILD_DATE }})
        continue-on-error: true
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.BUILD_DATE }}.${{ github.run_number }}
          name: "RisignOSS"
          body: |
            ## Release Notes for v${{ env.BUILD_DATE }}.${{ github.run_number }}
            ### Features:
            - [+] First build
          files: |
            rom/out/target/product/${{ matrix.device }}/*.zip
            rom/out/target/product/${{ matrix.device }}/*.img
            rom/*.log
