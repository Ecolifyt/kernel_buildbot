name: Build RisignOSS
on:
  workflow_dispatch:
  
jobs:
  Read-configuration:
    name: 🐂 Parse config
    runs-on: ubuntu-latest
    outputs:
      BUILD_DATE: ${{ steps.generate-builddate.outputs.BUILDDATE }}
    steps:
      # This action checks-out your CONFIGSitory under $GITHUB_WORKSPACE, so your workflow can access it.
      - name: 😄 Checkout
        uses: actions/checkout@v4

      # Set compile time.
      - name: ⏰ Set builddate
        id: generate-builddate
        run: echo "BUILDDATE=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT

  Build-Kernel:
    name: "🐎 Build Rom"
    runs-on: fast
    needs:
      - Read-configuration
    strategy:
      max-parallel: 6
      fail-fast: false
    env:
      # Basic configuration
      WORKSPACE: ${{ github.workspace }}
      BUILD_DATE: "${{ needs.Read-configuration.outputs.BUILD_DATE }}"
      
    steps:
      - name: 📐 Set swap to 16G
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 16

      # This action checks-out your CONFIGSitory under $GITHUB_WORKSPACE, so your workflow can access it.
      - name: 😄 Checkout
        uses: actions/checkout@v4

      # Install prerequisites for Ubuntu
      - name: ⭐ Install prerequisites
        run: |
          sudo apt-get update

          sudo DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y curl git ftp lftp wget libarchive-tools ccache python3 pngcrush schedtool dpkg-dev liblz4-tool make optipng maven device-tree-compiler libc6-dev-i386 libx11-dev lib32z-dev libgl1-mesa-dev xsltproc libxml2-utils libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools lzop flex tree build-essential bc libssl-dev libfl-dev  gcc-aarch64-linux-gnu pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl zip unzip tar gzip bzip2 rar unrar bison gperf zlib1g-dev automake binutils openssl kmod cpio flex libelf-dev libtfm-dev ca-certificates xz-utils aria2 pigz gzip bzip2
          sudo curl --create-dirs -L -o /usr/local/bin/repo -O -L https://storage.googleapis.com/git-repo-downloads/repo
          sudo chmod a+rx /usr/local/bin/repo
          sudo apt-get install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf imagemagick protobuf-compiler python3-protobuf lib32readline-dev lib32z1-dev libdw-dev libelf-dev lz4 libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev
          wget https://archive.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2_amd64.deb && sudo dpkg -i libtinfo5_6.3-2_amd64.deb && rm -f libtinfo5_6.3-2_amd64.deb
          wget https://archive.ubuntu.com/ubuntu/pool/universe/n/ncurses/libncurses5_6.3-2_amd64.deb && sudo dpkg -i libncurses5_6.3-2_amd64.deb && rm -f libncurses5_6.3-2_amd64.deb
          
      - name: 😎 init credentials
        run: |   
          cd ~      
          git config --global user.name "EduardoA3677"
          git config --global user.email "ealvarado261500@gmail.com"
          git lfs install
          git config --global trailer.changeid.key "Change-Id"
          
      - name: 🌟 checkout aosp build system
        run: |
          cd ~        
          mkdir rom
          cd rom
          repo init -u https://github.com/RisingOS-Revived/android -b qpr2 --git-lfs
          git clone https://github.com/Ecolifyt/local_manifests .repo/local_manifests
          repo sync -c --no-clone-bundle --optimized-fetch --prune --force-sync -j$(nproc --all)
          echo "CURRENT_DIR=$(pwd)" >> $GITHUB_ENV
          echo "La ruta actual es: $CURRENT_DIR"
 
      # KSU specific steps
      - name: 💫 Build Rom
        run: |
          cd ~
          cd rom 
          . build/envsetup.sh
          riseup cheetah eng
          rise b
      
      - name: "💾 Upload RisignOSS build files => (${{ env.BUILD_DATE }})"
        env:
          ANYKERNEL3_FILE: "android14-6.1-susfsnext-${{ env.BUILD_DATE }}"
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ANYKERNEL3_FILE }}
          path: |
            ~/kernel/out/target/product/cheetah/*.zip
            ~/kernel/out/target/product/cheetah/*.img

      - name: 🧧 Create GitHub Release => (${{ env.BUILD_DATE }})
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: Ecolifyt
          REPO_NAME: kernel_buildbot
          RELEASE_NAME: "RisignOs"
          RELEASE_NOTES: |
            ## Release Notes for v${{ env.BUILD_DATE }}.${{ github.run_number }}
            ### Features:
            - [+] First build
        continue-on-error: true
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.BUILD_DATE }}.${{ github.run_number }}
          files: |
             ~/kernel/out/target/product/cheetah/*.zip
             ~/kernel/out/target/product/cheetah/*.img
          generate_release_notes: true
