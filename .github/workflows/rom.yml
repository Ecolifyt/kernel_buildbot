name: Build RisignOSS
permissions:
  contents: write
  actions: write
  
on:
  workflow_dispatch:
  
jobs:
  Read-configuration:
    name: 🐂 Parse config
    runs-on: ubuntu-latest
    outputs:
      BUILD_DATE: ${{ steps.generate-builddate.outputs.BUILDDATE }}
    steps:
      # This action checks-out your CONFIGSitory under $GITHUB_WORKSPACE, so your workflow can access it.
      - name: 😄 Checkout
        uses: actions/checkout@v4

      # Set compile time.
      - name: ⏰ Set builddate
        id: generate-builddate
        run: echo "BUILDDATE=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT

  Build-Kernel:
    name: "🐎 Build Rom"
    runs-on: fast
    needs:
      - Read-configuration
    strategy:
      fail-fast: false
    env:
      # Basic configuration
      BUILD_DATE: "${{ needs.Read-configuration.outputs.BUILD_DATE }}"
      
    steps:
      # This action checks-out your CONFIGSitory under $GITHUB_WORKSPACE, so your workflow can access it.
      - name: 😄 Checkout
        uses: actions/checkout@v4

      - name: Set CONFIG Environment Variable
        run: |
          CURRENT_DIR=$(pwd)
          echo "CURRENT_DIR=$CURRENT_DIR" >> $GITHUB_ENV
          
      # Install prerequisites for Ubuntu
      - name: ⭐ Install prerequisites
        run: |
          cd "$CURRENT_DIR"
          sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt install -yq bc bison build-essential ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf imagemagick protobuf-compiler python3-protobuf lib32readline-dev lib32z1-dev libdw-dev libelf-dev lz4 libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev
          mkdir -p ./git-repo
          echo "Downloading repo tool..."
          curl https://storage.googleapis.com/git-repo-downloads/repo > ./git-repo/repo
          chmod a+rx ./git-repo/repo
          echo "REPO=$CURRENT_DIR/./git-repo/repo" >> $GITHUB_ENV
          wget https://archive.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2_amd64.deb && sudo dpkg -i libtinfo5_6.3-2_amd64.deb && rm -f libtinfo5_6.3-2_amd64.deb
          wget https://archive.ubuntu.com/ubuntu/pool/universe/n/ncurses/libncurses5_6.3-2_amd64.deb && sudo dpkg -i libncurses5_6.3-2_amd64.deb && rm -f libncurses5_6.3-2_amd64.deb
          
      - name: 🌟 checkout aosp build system
        run: |
          cd "$CURRENT_DIR"
          mkdir -p rom
          cd rom
          git lfs install
          $REPO init -u https://github.com/RisingOS-Revived/android -b qpr2 --git-lfs
          git clone https://github.com/Ecolifyt/local_manifests .repo/local_manifests
          $REPO sync -c --no-clone-bundle --force-sync -j$(nproc --all)
          
      # KSU specific steps
      - name: 💫 Build Rom
        run: |
          cd "$CURRENT_DIR/rom"
          . build/envsetup.sh
          riseup cheetah eng
          rise b
      
      - name: "💾 Upload RisignOSS build files => (${{ env.BUILD_DATE }})"
        env:
          ANYKERNEL3_FILE: "android14-6.1-susfsnext-${{ env.BUILD_DATE }}"
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ANYKERNEL3_FILE }}
          path: |
            ${{ env.CURRENT_DIR }}/rom/out/target/product/cheetah/*.zip
            ${{ env.CURRENT_DIR }}/rom/out/target/product/cheetah/*.img

      - name: 🧧 Create GitHub Release => (${{ env.BUILD_DATE }})
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: Ecolifyt
          REPO_NAME: kernel_buildbot
          RELEASE_NAME: "RisignOs"
          RELEASE_NOTES: |
            ## Release Notes for v${{ env.BUILD_DATE }}.${{ github.run_number }}
            ### Features:
            - [+] First build
        continue-on-error: true
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.BUILD_DATE }}.${{ github.run_number }}
          files: |
             ${{ env.CURRENT_DIR }}/rom/out/target/product/cheetah/*.zip
             ${{ env.CURRENT_DIR }}/rom/out/target/product/cheetah/*.img
          generate_release_notes: true
