name: Build kernels
on:
  workflow_dispatch:
  
jobs:
  Read-configuration:
    name: 🐂 Parse config
    runs-on: ubuntu-latest
    outputs:
      BUILD_DATE: ${{ steps.generate-builddate.outputs.BUILDDATE }}
    steps:
      # This action checks-out your CONFIGSitory under $GITHUB_WORKSPACE, so your workflow can access it.
      - name: 😄 Checkout
        uses: actions/checkout@v4

      # Set compile time.
      - name: ⏰ Set builddate
        id: generate-builddate
        run: echo "BUILDDATE=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

  Build-Kernel:
    name: "🐎 Build kernel"
    runs-on: ubuntu-latest
    needs:
      - Read-configuration
    strategy:
      max-parallel: 6
      fail-fast: false
    env:
      # Basic configuration
      WORKSPACE: ${{ github.workspace }}
      BUILD_DATE: "${{ needs.Read-configuration.outputs.BUILD_DATE }}"
      
    steps:
      - name: 📐 Set swap to 16G
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 16

      # This action checks-out your CONFIGSitory under $GITHUB_WORKSPACE, so your workflow can access it.
      - name: 😄 Checkout
        uses: actions/checkout@v4

      # Install prerequisites for Ubuntu
      - name: ⭐ Install prerequisites
        run: |
          sudo apt-get update

          sudo DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y curl git ftp lftp wget libarchive-tools ccache python3 pngcrush schedtool dpkg-dev liblz4-tool make optipng maven device-tree-compiler libc6-dev-i386 libx11-dev lib32z-dev libgl1-mesa-dev xsltproc libxml2-utils libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools lzop flex tree build-essential bc libssl-dev libfl-dev  gcc-aarch64-linux-gnu pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl zip unzip tar gzip bzip2 rar unrar bison gperf zlib1g-dev automake binutils openssl kmod cpio flex libelf-dev libtfm-dev ca-certificates xz-utils aria2 pigz gzip bzip2
          sudo curl --create-dirs -L -o /usr/local/bin/repo -O -L https://storage.googleapis.com/git-repo-downloads/repo
          sudo chmod a+rx /usr/local/bin/repo
          
      - name: 😎 init credentials
        run: |   
          cd ~      
          git config --global user.name "EduardoA3677"
          git config --global user.email "ealvarado261500@gmail.com"
      
      - name: 🌟 checkout aosp kernel build system
        run: |
          cd ~        
          mkdir kernel
          cd kernel
          repo init -u https://github.com/EduardoA3677/android-gs-pantah-6.1-android15-qpr2 --depth 1
          repo sync -c -j6 --no-tags --no-clone-bundle --force-sync
          echo "CURRENT_DIR=$(pwd)" >> $GITHUB_ENV
          echo "La ruta actual es: $CURRENT_DIR"
   
      - name: 💫 checkout android14-6.1-lts
        run: |
          cd ~/kernel
          rm -rf aosp/
          git clone https://github.com/EduardoA3677/gs201.git --depth=1 aosp

      - name: 💫 checkout some google-modules patched
        run: |
          cd ~/kernel
          cd private/google-modules/gxp
          rm -rf gs201
          git clone https://github.com/EduardoA3677/gxp-gs201.git --depth=1 gs201
          cd ~/kernel/private/google-modules/edgetpu
          rm -rf rio
          git clone https://github.com/EduardoA3677/rio.git --depth=1 rio

      # KSU specific steps
      - name: 💫 clone wild kernel patches + susfs4ksu
        run: |
          cd ~
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
          git clone https://github.com/WildPlusKernel/kernel_patches.git
          mv kernel_patches ~/kernel
          mv susfs4ksu ~/kernel
          
      - name: 😎 patch kernel ksunext susfs
        run: |
          cd ~
          cd kernel/aosp
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next-susfs/kernel/setup.sh" | bash -s next-susfs
          cd KernelSU-Next
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
          cd ..
          cd ~/kernel
          cp susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./aosp/
          cp susfs4ksu/kernel_patches/fs/* ./aosp/fs/
          cp susfs4ksu/kernel_patches/include/linux/* ./aosp/include/linux/
          #cp kernel_patches/next/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch ./aosp/KernelSU-Next
          cp kernel_patches/next/syscall_hooks.patch ./aosp/
          cp kernel_patches/69_hide_stuff.patch ./aosp/
          cd ~/kernel/aosp
          cd ./KernelSU-Next
          #patch -p1 --forward < 0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch || true
          cd ..
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch
          patch -p1 -F 3 < 69_hide_stuff.patch
          patch -p1 -F 3 < syscall_hooks.patch
          
          cd ~/kernel
          echo "Adding configuration settings to gki_defconfig..."
          # Add KSU configuration settings
          echo "CONFIG_KSU=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_WITH_KPROBES=n" >> ./aosp/arch/arm64/configs/gki_defconfig
          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./aosp/arch/arm64/configs/gki_defconfig
          # Add additional tmpfs config setting
          echo "CONFIG_TMPFS_XATTR=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TMPFS_POSIX_ACL=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          # Add additional config setting
          echo "CONFIG_IP_NF_TARGET_TTL=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_TARGET_HL=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_MATCH_HL=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          cd ~/kernel
          sed -i 's/check_defconfig//' ./aosp/build.config.gki
          sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
          
      - name: "🐎 Build kernel"
        run: |
            set -e
            set -x
            cd "$CURRENT_DIR"
            tools/bazel run \
              --kernel_package=@//aosp \
              --config=local \
              --lto=none \
              --config=pantah \
              //private/devices/google/pantah:gs201_pantah_dist \
              --config=no_download_gki_fips140 \
              --config=no_download_gki \
              "${@}"

      - name: 😋 Pack AnyKernel3
        continue-on-error: true
        env:
          ANYKERNEL3_FILE: "android14-6.1-susfsnext-${{ env.BUILD_DATE }}"
          ANYKERNEL3_FILE_GZ: "android14-6.1-susfsnext-${{ env.BUILD_DATE }}-gz"
          ANYKERNEL3_FILE_LZ4: "android14-6.1-susfsnext-${{ env.BUILD_DATE }}-lz4"
        run: |
          cd ~/kernel
          git clone -b gs201 --recursive --depth=1 -j $(nproc) https://github.com/EduardoA3677/AnyKernel3.git AnyKernel3
          cp ~/kernel/out/pantah/dist/dtbo.img ~/kernel/AnyKernel3/dtbo.img
          cp ~/kernel/out/pantah/dist/vendor_kernel_boot.img ~/kernel/AnyKernel3/vendor_kernel_boot.img
          cp -r ~/kernel/AnyKernel3 ~/kernel/AnyKernel3-gz
          cp -r ~/kernel/AnyKernel3 ~/kernel/AnyKernel3-lz4
          cp ~/kernel/out/pantah/dist/Image.lz4 ~/kernel/AnyKernel3-lz4/Image.lz4
          cp ~/kernel/out/pantah/dist/Image.gz ~/kernel/AnyKernel3-gz/Image.gz
          cp ~/kernel/out/pantah/dist/Image ~/kernel/AnyKernel3/Image
          cd AnyKernel3 
          zip -q -r "../${{ env.ANYKERNEL3_FILE }}.zip" *
          cd ..
          cd AnyKernel3-gz
          zip -q -r "../${{ env.ANYKERNEL3_FILE_GZ}}.zip" *
          cd ..
          cd AnyKernel3-lz4
          zip -q -r "../${{ env.ANYKERNEL3_FILE_LZ4}}.zip" *
          cd ..
          
      - name: "💾 Upload AnyKernel3 Image => (${{ env.BUILD_DATE }})"
        env:
          ANYKERNEL3_FILE: "android14-6.1-susfsnext-${{ env.BUILD_DATE }}"
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ANYKERNEL3_FILE }}
          path: |
            ~/kernel/AnyKernel3/*

      - name: "💾 Upload AnyKernel3 Image.gz => (${{ env.BUILD_DATE }})"
        env:
          ANYKERNEL3_FILE_GZ: "android14-6.1-susfsnext-${{ env.BUILD_DATE }}-gz"
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ANYKERNEL3_FILE_GZ }}
          path: |
            ~/kernel/AnyKernel3-gz/*
   
      - name: "💾 Upload AnyKernel3 Image.lz4 => (${{ env.BUILD_DATE }})"
        env:
          ANYKERNEL3_FILE_LZ4: "android14-6.1-susfsnext-${{ env.BUILD_DATE }}-lz4"
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ANYKERNEL3_FILE_LZ4 }}
          path: |
            ~/kernel/AnyKernel3-lz4/*
            
      - name: ⏰ Pack output directory
        continue-on-error: true
        run: |
          cd ~/kernel/out
          mkdir -p output

          # Buscar y copiar los archivos deseados
          find . -type f \( \
            -name ".config" -o \
            -name "*.config" -o \
            -name "*defconfig" -o \
            -name "*.tar.gz" -o \
            -name "*.zip" -o \
            -name "*.img" -o \
            -name "*.gz" -o \
            -name "*.dtb" -o \
            -name "*.dtbo" -o \
            -name "*.lz4" -o \
            -name "*Image" -o \
            -name "*dtb" -o \
            -name "*dtbo" -o \
            -name "*gz" \
          \) -exec cp --parents {} output/ \;

          # Comprimir los resultados en un .zip
          cd output
          
      - name: ☢️ Upload output directory
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: android14-6.1-output-${{ env.BUILD_DATE }}
          path: ~/kernel/out/output
          
      - name: ⏰ Pack output images directory
        continue-on-error: true
        run: |
          cd ~/kernel/out/pantah/dist
          mkdir imgs
          cp *.img imgs

      - name: ☢️ Upload images directory
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: android14-6.1-imgs-${{ env.BUILD_DATE }}
          path: ~/kernel/out/pantah/dist/imgs
          
      - name:  ☢️ Upload output dist directory
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: android14-6.1-dist-${{ env.BUILD_DATE }}
          path: ~/kernel/out/pantah/dist
  
      - name: 🧧 Create GitHub Release => (${{ env.BUILD_DATE }})
        env:
          ANYKERNEL3_FILE: "~/kernel/android14-6.1-susfsnext-${{ env.BUILD_DATE }}"
          ANYKERNEL3_FILE-GZ: "~/kernel/android14-6.1-susfsnext-${{ env.BUILD_DATE }}-gz"
          ANYKERNEL3_FILE_LZ4: "~/kernel/android14-6.1-susfsnext-${{ env.BUILD_DATE }}-lz4"
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: EduardoA3677
          REPO_NAME: kernel_buildbot
          RELEASE_NAME: "Kernels With KernelSU Next & SUSFS v1.5.6"
          RELEASE_NOTES: |
            ## Release Notes for v${{ env.BUILD_DATE }}.${{ github.run_number }}
    
            ### Features:
            - [+] KernelSU-Next
            - [+] SUSFS Support
            - [+] Magic Mount Support
        continue-on-error: true
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.BUILD_DATE }}.${{ github.run_number }}
          files: |
            "${{ env.ANYKERNEL3_FILE }}.zip"
            "${{ env.ANYKERNEL3_FILE_GZ }}.zip"
            "${{ env.ANYKERNEL3_FILE_LZ4 }}.zip"
          generate_release_notes: true
