name: triggered kernel build
on:
  workflow_dispatch:
    inputs:
      kernel_variant:
        description: 'Kernel variant to build'
        required: true
        type: choice
        default: gki-ksunext
        options:
          - gki
          - gki-ksunext

jobs:
  build_kernel:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout scripts
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: install packages
        run: |
          ./pkginstall

      - name: init credentials
        run: |   
          cd ~      
          git config --global user.name "[kernel buildbot] vy"
          git config --global user.email "vy@buildbot.tvyiutnhisokewt"
      
      - name: checkout aosp kernel build system
        run: |
          cp buildscript ~ 
          cd ~        
          mkdir kernel
          cp buildscript kernel
          cd kernel
          repo init -u https://android.googlesource.com/kernel/manifest -b android-gs-pantah-6.1-android15-qpr2-beta --depth 1
          repo sync -c -j6 --no-tags --no-clone-bundle --force-sync
          echo "CURRENT_DIR=$(pwd)" >> $GITHUB_ENV
          echo "La ruta actual es: $CURRENT_DIR"
     
      - name: Set environment variables
        continue-on-error: true
        run: |
          echo "La ruta actual es: $CURRENT_DIR"
          echo "AVBTOOL=$CURRENT_DIR/prebuilts/kernel-build-tools/linux-x86/bin/avbtool" >> $GITHUB_ENV
          echo "MKBOOTIMG=$CURRENT_DIR/tools/mkbootimg/mkbootimg.py" >> $GITHUB_ENV
          echo "UNPACK_BOOTIMG=$CURRENT_DIR/tools/mkbootimg/unpack_bootimg.py" >> $GITHUB_ENV
          
      # KSU specific steps
      - name: clone wild kernel patches + susfs4ksu
        if: github.event.inputs.kernel_variant == 'gki-ksunext' || contains(github.ref, 'gki_ksu')
        run: |
          cd ~
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
          git clone https://github.com/WildPlusKernel/kernel_patches.git
          git clone https://github.com/Testady/SukiSU_patch.git
          mv SukiSU_patch ~/kernel
          mv kernel_patches ~/kernel
          mv susfs4ksu ~/kernel

      - name: patch kernel ksunext susfs
        if: github.event.inputs.kernel_variant == 'gki-ksunext' || contains(github.ref, 'gki_ksu')
        run: |
          cd ~
          cd kernel/aosp
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          cd KernelSU-Next
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
          cd ..
          rm android/abi_gki_protected_exports_*
          cd ~/kernel
          cp susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./aosp/
          cp susfs4ksu/kernel_patches/fs/* ./aosp/fs/
          cp susfs4ksu/kernel_patches/include/linux/* ./aosp/include/linux/
          cp kernel_patches/next/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch ./aosp/KernelSU-Next/
          cp kernel_patches/next/syscall_hooks.patch ./aosp/
          cp SukiSU_patch/other/lz4k_patch/6.1/lz4kd.patch ./aosp/
          cp -r SukiSU_patch/other/lz4k/include/linux/* ./aosp/include/linux
          cp -r SukiSU_patch/other/lz4k/lib/* ./aosp/lib
          cp -r SukiSU_patch/other/lz4k/crypto/* ./aosp/crypto
          cd ~/kernel/aosp
          cd ./KernelSU-Next
          patch -p1 < 0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch || true
          cd ..
          cp ../kernel_patches/69_hide_stuff.patch ./ 
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch
          patch -p1 -F 3 < 69_hide_stuff.patch
          patch -p1 -F 3 < syscall_hooks.patch
          patch -p1 -F 3 < lz4kd.patch || true
          
          cd ~/kernel
          echo "Adding configuration settings to gki_defconfig..."
          # Add KSU configuration settings
          echo "CONFIG_KSU=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_WITH_KPROBES=n" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./aosp/arch/arm64/configs/gki_defconfig

          # Add additional tmpfs config setting
          echo "CONFIG_TMPFS_XATTR=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TMPFS_POSIX_ACL=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          # Add additional config setting
          echo "CONFIG_IP_NF_TARGET_TTL=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_TARGET_HL=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_MATCH_HL=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4HC=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4K=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4KD=y" >> ./aosp/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_842=y" >> ./aosp/arch/arm64/configs/gki_defconfig

          sed -i 's/CONFIG_ZSMALLOC=m/CONFIG_ZSMALLOC=y/g' ./aosp/arch/arm64/configs/gki_defconfig
          sed -i 's/CONFIG_ZRAM=m/CONFIG_ZRAM=y/g' ./aosp/arch/arm64/configs/gki_defconfig
          cd ~/kernel
          sed -i 's/check_defconfig//' ./aosp/build.config.gki
          sed -i 's/ -dirty//g' ./aosp/scripts/setlocalversion
          sed -i '$i res=$(echo "$res" | sed '\''s/-dirty//g'\'')' ./aosp/scripts/setlocalversion
          perl -pi -e 's{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="#1 SMP PREEMPT Sat Apr 20 04:20:00 UTC 2024"}' ./aosp/scripts/mkcompile_h
          sed -E -i '/^CONFIG_LOCALVERSION=/ s/(.*)"$/\1"/' ./aosp/arch/arm64/configs/gki_defconfig
          
      - name: Build Kernel
        run: |
            cd "$CURRENT_DIR"
            tools/bazel run \
              --kernel_package=@//aosp \
              --config=fast \
              --config=pantah \
              //private/devices/google/pantah:gs201_pantah_dist \
              --config=no_download_gki_fips140 \
              --config=no_download_gki \
              "${@}"

      - name: Pack AnyKernel3
        continue-on-error: true
        run: |
          cd ~/kernel
          git clone -b gs201 --recursive --depth=1 -j $(nproc) https://github.com/EduardoA3677/AnyKernel3.git AnyKernel3
          cat ~/kernel/out/pantah/dist/*.dtb > ~/kernel/AnyKernel3/dtb
          cp ~/kernel/out/pantah/dist/dtbo.img ~/kernel/AnyKernel3/dtbo.img
          cp ~/kernel/out/pantah/dist/vendor_kernel_boot.img ~/kernel/AnyKernel3/vendor_kernel_boot.img
          cd ~/kernel/AnyKernel3
          cp ~/kernel/out/pantah/dist/Image.lz4 ~/kernel/AnyKernel3/Image.lz4
          zip -r "../GS201_Android14_6.1_mksu_lz4.zip" ./*
          rm ~/kernel/AnyKernel3/Image.lz4
          cp ~/kernel/out/pantah/dist/Image.gz ~/kernel/AnyKernel3/Image.gz
          zip -r "../GS201_Android14_6.1_mksu_GZ.zip" ./*
          rm ~/kernel/AnyKernel3/Image.gz
          cp ~/kernel/out/pantah/dist/Image ~/kernel/AnyKernel3/Image
          zip -r "../GS201_Android14_6.1_mksu.zip" ./*
          rm ~/kernel/AnyKernel3/Image  
    
      - name: upload AnyKernel3 zip as artifact
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: kernel-dist-${{ github.event.inputs.kernel_variant || 'gki' }}
          path: |
            ~/kernel/GS201_Android14_6.1_mksu.zip
            ~/kernel/GS201_Android14_6.1_mksu_GZ.zip
            ~/kernel/GS201_Android14_6.1_mksu_lz4.zip

      - name: Buscar y comprimir archivos de configuraci√≥n del kernel
        continue-on-error: true
        run: |
          cd ~/kernel/out
          mkdir -p output

          # Buscar y copiar los archivos deseados
          find . -type f \( \
            -name ".config" -o \
            -name "*.config" -o \
            -name "*defconfig" -o \
            -name "*.tar.gz" -o \
            -name "*.zip" \
          \) -exec cp --parents {} output/ \;

          # Comprimir los resultados en un .zip
          cd output
          zip -r "../kernel_files.zip" ./*
          
      - name: Subir artifact
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: kernel-files-${{ github.event.inputs.kernel_variant || 'gki' }}
          path: ~/kernel/out/kernel_files.zip
          
      - name: Pack kernel build imgs output
        continue-on-error: true
        run: |
          cd ~/kernel/out/pantah/dist
          mkdir imgs
          cp *.img imgs
          cd imgs
          zip -r "imgs.zip" ./*

      - name: Pack dist output
        continue-on-error: true
        run: |
          cd ~/kernel/out/pantah/dist
          zip -r "dist.zip" ./*

      - name: upload dist zip as artifact
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: kernel-out-${{ github.event.inputs.kernel_variant || 'gki' }}
          path: ~/kernel/out/pantah/dist/dist.zip
          
      - name: upload images build zip as artifact
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: kernel-imgs-${{ github.event.inputs.kernel_variant || 'gki' }}
          path: ~/kernel/out/pantah/dist/imgs/imgs.zip
          
